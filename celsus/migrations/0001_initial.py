# Generated by Django 4.1.1 on 2022-10-02 16:56

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CellType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Curtain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('link_id', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('file', models.FileField(upload_to='files/user_upload/')),
                ('file_type', models.CharField(choices=[('DA', 'Differential Analysis'), ('R', 'Raw'), ('O', 'Other')], default='O', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Organism',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='OrganismPart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('sample_processing_protocol', models.TextField()),
                ('data_processing_protocol', models.TextField()),
                ('experiment_type', models.TextField()),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('database_version', models.TextField()),
                ('enable', models.BooleanField(default=False)),
                ('cell_type', models.ManyToManyField(to='celsus.celltype')),
                ('curtain', models.ManyToManyField(to='celsus.curtain')),
                ('disease', models.ManyToManyField(to='celsus.disease')),
                ('instrument', models.ManyToManyField(to='celsus.instrument')),
                ('keyword', models.ManyToManyField(to='celsus.keyword')),
                ('organism', models.ManyToManyField(to='celsus.organism')),
                ('organism_part', models.ManyToManyField(to='celsus.organismpart')),
            ],
        ),
        migrations.CreateModel(
            name='QuantificationMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TissueType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='SampleAnnotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='sample_annotations', to='celsus.project')),
            ],
        ),
        migrations.CreateModel(
            name='RawSampleColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.TextField()),
                ('file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='celsus.file')),
            ],
        ),
        migrations.CreateModel(
            name='RawData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('primary_id', models.TextField()),
                ('gene_names', models.TextField()),
                ('value', models.TextField()),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='raw_datas', to='celsus.project')),
                ('raw_sample_column', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='celsus.rawsamplecolumn')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='quantification_method',
            field=models.ManyToManyField(to='celsus.quantificationmethod'),
        ),
        migrations.AddField(
            model_name='project',
            name='tissue_type',
            field=models.ManyToManyField(to='celsus.tissuetype'),
        ),
        migrations.CreateModel(
            name='OtherPersonnel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.TextField()),
                ('email', models.EmailField(max_length=254)),
                ('is_collaborator', models.BooleanField()),
                ('is_pi', models.BooleanField()),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='other_personnels', to='celsus.project')),
            ],
        ),
        migrations.AddField(
            model_name='file',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='files', to='celsus.project'),
        ),
        migrations.CreateModel(
            name='DifferentialSampleColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.TextField()),
                ('column_type', models.CharField(choices=[('P', 'P-value'), ('FC', 'Fold Change')], default='V', max_length=2)),
                ('file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='celsus.file')),
            ],
        ),
        migrations.CreateModel(
            name='DifferentialAnalysisData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('primary_id', models.TextField()),
                ('gene_names', models.TextField()),
                ('fold_change', models.FloatField()),
                ('significant', models.FloatField()),
                ('comparison', models.TextField()),
                ('differential_analysis_column', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='celsus.differentialsamplecolumn')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='differential_analysis_datas', to='celsus.project')),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.TextField()),
                ('email', models.EmailField(max_length=254)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='authors', to='celsus.project')),
            ],
        ),
    ]
